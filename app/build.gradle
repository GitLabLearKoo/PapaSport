apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.adrian.papasport"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    signingConfigs {
        debug
        release {
            storeFile file("./keystore/keystore.jks")
            storePassword "admin123"
            keyAlias "agentweb"
            keyPassword "admin123"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api rootProject.ext.dependencies.agentWeb
    implementation rootProject.ext.dependencies.androidAppCompatV7
    implementation rootProject.ext.dependencies.androidSupportDesign
    implementation rootProject.ext.dependencies.twinklingRefreshLayout
    implementation rootProject.ext.dependencies.tencentSonic
    implementation rootProject.ext.dependencies.smartRefreshLayout
    implementation rootProject.ext.dependencies.smartRefreshHeader

    implementation project(":basemodule")
    if (rootProject.ext.isModule) {
        implementation project(":nfcmodule")
        implementation project(":printmodule")
        implementation project(":rfidmodule")
    }
}
